import org.gradle.internal.jvm.Jvm

buildscript {
    repositories {
        maven {
            url "${artifactory_contextUrl}" + '/repo'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }

        dependencies {
            classpath "com.resolutebi:GradleCommonConfigurationPlugin:1.0.+",
                      "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
             
        }
    }
}

plugins {
  id 'nebula.dependency-lock' version '11.1.1'
}

apply plugin: 'resolute-common-config'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.artifactory"

group = 'com.resolute'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
    annotationProcessor 'com.google.auto.service:auto-service:1.0-rc5' // SPECIFIC TO APT
    compileOnly         'com.google.auto.service:auto-service:1.0-rc5' // SPECIFIC TO APT

    implementation     'org.slf4j:slf4j-api:1.7.30',
                       'com.google.guava:guava:30.1-jre',
                       'com.squareup:javapoet:1.13.0' // SPECIFIC TO APT
  
	testImplementation(platform('org.junit:junit-bom:5.7.0'))
	testImplementation 'org.junit.jupiter:junit-jupiter',
                       'org.assertj:assertj-core:3.18.1',
                       'org.testcontainers:testcontainers:1.15.1',
                       'org.testcontainers:junit-jupiter:1.15.1',
                       'org.mockito:mockito-core:3.6.28',
                       'org.slf4j:slf4j-simple:1.7.30',
                       'com.google.testing.compile:compile-testing:0.16', // SPECIFIC TO APT TESTING
                       'com.google.truth:truth:0.42' // SPECIFIC TO APT TESTING
     
     // The following line is needed to resolve ClassNotFound: TreeScanner error when testing
     testImplementation files(Jvm.current().getToolsJar())                       
                
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}	

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact (sourcesJar) { 
                classifier = 'sources'
            }
            artifact (javadocJar) {
                classifier = 'javadoc'	            
            }
        }
    }
}

artifactoryPublish {
    publications('mavenJava')
}

test {
    useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}
